// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_msgs.Twist.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto_msgs.Twist.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_msg {
class TwistDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Twist>
     _instance;
} _Twist_default_instance_;

namespace protobuf_proto_5fmsgs_2eTwist_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twist, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twist, protocol_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twist, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twist, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twist, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twist, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twist, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twist, yaw_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(Twist)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Twist_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "proto_msgs.Twist.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Twist_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Twist_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026proto_msgs.Twist.proto\022\tproto_msg\"i\n\005T"
      "wist\022\025\n\rprotocol_type\030\001 \002(\t\022\t\n\001x\030\002 \002(\001\022\t"
      "\n\001y\030\003 \002(\001\022\t\n\001z\030\004 \002(\001\022\014\n\004roll\030\005 \002(\001\022\r\n\005pi"
      "tch\030\006 \002(\001\022\013\n\003yaw\030\007 \002(\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 142);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto_msgs.Twist.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_proto_5fmsgs_2eTwist_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Twist::kProtocolTypeFieldNumber;
const int Twist::kXFieldNumber;
const int Twist::kYFieldNumber;
const int Twist::kZFieldNumber;
const int Twist::kRollFieldNumber;
const int Twist::kPitchFieldNumber;
const int Twist::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Twist::Twist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_5fmsgs_2eTwist_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_msg.Twist)
}
Twist::Twist(const Twist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protocol_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_protocol_type()) {
    protocol_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_type_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&x_)) + sizeof(yaw_));
  // @@protoc_insertion_point(copy_constructor:proto_msg.Twist)
}

void Twist::SharedCtor() {
  _cached_size_ = 0;
  protocol_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&x_)) + sizeof(yaw_));
}

Twist::~Twist() {
  // @@protoc_insertion_point(destructor:proto_msg.Twist)
  SharedDtor();
}

void Twist::SharedDtor() {
  protocol_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Twist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Twist::descriptor() {
  protobuf_proto_5fmsgs_2eTwist_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_5fmsgs_2eTwist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Twist& Twist::default_instance() {
  protobuf_proto_5fmsgs_2eTwist_2eproto::InitDefaults();
  return *internal_default_instance();
}

Twist* Twist::New(::google::protobuf::Arena* arena) const {
  Twist* n = new Twist;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Twist::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_msg.Twist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_protocol_type()) {
    GOOGLE_DCHECK(!protocol_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*protocol_type_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 126u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yaw_) -
        reinterpret_cast<char*>(&x_)) + sizeof(yaw_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Twist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_msg.Twist)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string protocol_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->protocol_type().data(), static_cast<int>(this->protocol_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto_msg.Twist.protocol_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double roll = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_roll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double pitch = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double yaw = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_yaw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_msg.Twist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_msg.Twist)
  return false;
#undef DO_
}

void Twist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_msg.Twist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string protocol_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->protocol_type().data(), static_cast<int>(this->protocol_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto_msg.Twist.protocol_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->protocol_type(), output);
  }

  // required double x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }

  // required double y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }

  // required double z = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->z(), output);
  }

  // required double roll = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->roll(), output);
  }

  // required double pitch = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->pitch(), output);
  }

  // required double yaw = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->yaw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_msg.Twist)
}

::google::protobuf::uint8* Twist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_msg.Twist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string protocol_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->protocol_type().data(), static_cast<int>(this->protocol_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto_msg.Twist.protocol_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->protocol_type(), target);
  }

  // required double x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }

  // required double y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }

  // required double z = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->z(), target);
  }

  // required double roll = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->roll(), target);
  }

  // required double pitch = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->pitch(), target);
  }

  // required double yaw = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->yaw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_msg.Twist)
  return target;
}

size_t Twist::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto_msg.Twist)
  size_t total_size = 0;

  if (has_protocol_type()) {
    // required string protocol_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol_type());
  }

  if (has_x()) {
    // required double x = 2;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 3;
    total_size += 1 + 8;
  }

  if (has_z()) {
    // required double z = 4;
    total_size += 1 + 8;
  }

  if (has_roll()) {
    // required double roll = 5;
    total_size += 1 + 8;
  }

  if (has_pitch()) {
    // required double pitch = 6;
    total_size += 1 + 8;
  }

  if (has_yaw()) {
    // required double yaw = 7;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t Twist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_msg.Twist)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required string protocol_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol_type());

    // required double x = 2;
    total_size += 1 + 8;

    // required double y = 3;
    total_size += 1 + 8;

    // required double z = 4;
    total_size += 1 + 8;

    // required double roll = 5;
    total_size += 1 + 8;

    // required double pitch = 6;
    total_size += 1 + 8;

    // required double yaw = 7;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Twist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_msg.Twist)
  GOOGLE_DCHECK_NE(&from, this);
  const Twist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Twist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_msg.Twist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_msg.Twist)
    MergeFrom(*source);
  }
}

void Twist::MergeFrom(const Twist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_msg.Twist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_protocol_type();
      protocol_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_type_);
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000010u) {
      roll_ = from.roll_;
    }
    if (cached_has_bits & 0x00000020u) {
      pitch_ = from.pitch_;
    }
    if (cached_has_bits & 0x00000040u) {
      yaw_ = from.yaw_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Twist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_msg.Twist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Twist::CopyFrom(const Twist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_msg.Twist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Twist::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void Twist::Swap(Twist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Twist::InternalSwap(Twist* other) {
  using std::swap;
  protocol_type_.Swap(&other->protocol_type_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Twist::GetMetadata() const {
  protobuf_proto_5fmsgs_2eTwist_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_5fmsgs_2eTwist_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Twist

// required string protocol_type = 1;
bool Twist::has_protocol_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Twist::set_has_protocol_type() {
  _has_bits_[0] |= 0x00000001u;
}
void Twist::clear_has_protocol_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void Twist::clear_protocol_type() {
  protocol_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_protocol_type();
}
const ::std::string& Twist::protocol_type() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.protocol_type)
  return protocol_type_.GetNoArena();
}
void Twist::set_protocol_type(const ::std::string& value) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_msg.Twist.protocol_type)
}
#if LANG_CXX11
void Twist::set_protocol_type(::std::string&& value) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_msg.Twist.protocol_type)
}
#endif
void Twist::set_protocol_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_msg.Twist.protocol_type)
}
void Twist::set_protocol_type(const char* value, size_t size) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_msg.Twist.protocol_type)
}
::std::string* Twist::mutable_protocol_type() {
  set_has_protocol_type();
  // @@protoc_insertion_point(field_mutable:proto_msg.Twist.protocol_type)
  return protocol_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Twist::release_protocol_type() {
  // @@protoc_insertion_point(field_release:proto_msg.Twist.protocol_type)
  clear_has_protocol_type();
  return protocol_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Twist::set_allocated_protocol_type(::std::string* protocol_type) {
  if (protocol_type != NULL) {
    set_has_protocol_type();
  } else {
    clear_has_protocol_type();
  }
  protocol_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol_type);
  // @@protoc_insertion_point(field_set_allocated:proto_msg.Twist.protocol_type)
}

// required double x = 2;
bool Twist::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Twist::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void Twist::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void Twist::clear_x() {
  x_ = 0;
  clear_has_x();
}
double Twist::x() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.x)
  return x_;
}
void Twist::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.x)
}

// required double y = 3;
bool Twist::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Twist::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void Twist::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void Twist::clear_y() {
  y_ = 0;
  clear_has_y();
}
double Twist::y() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.y)
  return y_;
}
void Twist::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.y)
}

// required double z = 4;
bool Twist::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Twist::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
void Twist::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
void Twist::clear_z() {
  z_ = 0;
  clear_has_z();
}
double Twist::z() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.z)
  return z_;
}
void Twist::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.z)
}

// required double roll = 5;
bool Twist::has_roll() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Twist::set_has_roll() {
  _has_bits_[0] |= 0x00000010u;
}
void Twist::clear_has_roll() {
  _has_bits_[0] &= ~0x00000010u;
}
void Twist::clear_roll() {
  roll_ = 0;
  clear_has_roll();
}
double Twist::roll() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.roll)
  return roll_;
}
void Twist::set_roll(double value) {
  set_has_roll();
  roll_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.roll)
}

// required double pitch = 6;
bool Twist::has_pitch() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Twist::set_has_pitch() {
  _has_bits_[0] |= 0x00000020u;
}
void Twist::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000020u;
}
void Twist::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
double Twist::pitch() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.pitch)
  return pitch_;
}
void Twist::set_pitch(double value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.pitch)
}

// required double yaw = 7;
bool Twist::has_yaw() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Twist::set_has_yaw() {
  _has_bits_[0] |= 0x00000040u;
}
void Twist::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000040u;
}
void Twist::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
double Twist::yaw() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.yaw)
  return yaw_;
}
void Twist::set_yaw(double value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.yaw)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_msg

// @@protoc_insertion_point(global_scope)
