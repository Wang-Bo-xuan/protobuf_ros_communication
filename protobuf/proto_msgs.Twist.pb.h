// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_msgs.Twist.proto

#ifndef PROTOBUF_proto_5fmsgs_2eTwist_2eproto__INCLUDED
#define PROTOBUF_proto_5fmsgs_2eTwist_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto_msg {
class Twist;
class TwistDefaultTypeInternal;
extern TwistDefaultTypeInternal _Twist_default_instance_;
}  // namespace proto_msg

namespace proto_msg {

namespace protobuf_proto_5fmsgs_2eTwist_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_proto_5fmsgs_2eTwist_2eproto

// ===================================================================

class Twist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto_msg.Twist) */ {
 public:
  Twist();
  virtual ~Twist();

  Twist(const Twist& from);

  inline Twist& operator=(const Twist& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Twist(Twist&& from) noexcept
    : Twist() {
    *this = ::std::move(from);
  }

  inline Twist& operator=(Twist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Twist& default_instance();

  static inline const Twist* internal_default_instance() {
    return reinterpret_cast<const Twist*>(
               &_Twist_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Twist* other);
  friend void swap(Twist& a, Twist& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Twist* New() const PROTOBUF_FINAL { return New(NULL); }

  Twist* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Twist& from);
  void MergeFrom(const Twist& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Twist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string protocol_type = 1;
  bool has_protocol_type() const;
  void clear_protocol_type();
  static const int kProtocolTypeFieldNumber = 1;
  const ::std::string& protocol_type() const;
  void set_protocol_type(const ::std::string& value);
  #if LANG_CXX11
  void set_protocol_type(::std::string&& value);
  #endif
  void set_protocol_type(const char* value);
  void set_protocol_type(const char* value, size_t size);
  ::std::string* mutable_protocol_type();
  ::std::string* release_protocol_type();
  void set_allocated_protocol_type(::std::string* protocol_type);

  // required double x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  double x() const;
  void set_x(double value);

  // required double y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  double y() const;
  void set_y(double value);

  // required double z = 4;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 4;
  double z() const;
  void set_z(double value);

  // required double roll = 5;
  bool has_roll() const;
  void clear_roll();
  static const int kRollFieldNumber = 5;
  double roll() const;
  void set_roll(double value);

  // required double pitch = 6;
  bool has_pitch() const;
  void clear_pitch();
  static const int kPitchFieldNumber = 6;
  double pitch() const;
  void set_pitch(double value);

  // required double yaw = 7;
  bool has_yaw() const;
  void clear_yaw();
  static const int kYawFieldNumber = 7;
  double yaw() const;
  void set_yaw(double value);

  // @@protoc_insertion_point(class_scope:proto_msg.Twist)
 private:
  void set_has_protocol_type();
  void clear_has_protocol_type();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();
  void set_has_roll();
  void clear_has_roll();
  void set_has_pitch();
  void clear_has_pitch();
  void set_has_yaw();
  void clear_has_yaw();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr protocol_type_;
  double x_;
  double y_;
  double z_;
  double roll_;
  double pitch_;
  double yaw_;
  friend struct protobuf_proto_5fmsgs_2eTwist_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Twist

// required string protocol_type = 1;
inline bool Twist::has_protocol_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Twist::set_has_protocol_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Twist::clear_has_protocol_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Twist::clear_protocol_type() {
  protocol_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_protocol_type();
}
inline const ::std::string& Twist::protocol_type() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.protocol_type)
  return protocol_type_.GetNoArena();
}
inline void Twist::set_protocol_type(const ::std::string& value) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_msg.Twist.protocol_type)
}
#if LANG_CXX11
inline void Twist::set_protocol_type(::std::string&& value) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_msg.Twist.protocol_type)
}
#endif
inline void Twist::set_protocol_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_msg.Twist.protocol_type)
}
inline void Twist::set_protocol_type(const char* value, size_t size) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_msg.Twist.protocol_type)
}
inline ::std::string* Twist::mutable_protocol_type() {
  set_has_protocol_type();
  // @@protoc_insertion_point(field_mutable:proto_msg.Twist.protocol_type)
  return protocol_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Twist::release_protocol_type() {
  // @@protoc_insertion_point(field_release:proto_msg.Twist.protocol_type)
  clear_has_protocol_type();
  return protocol_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Twist::set_allocated_protocol_type(::std::string* protocol_type) {
  if (protocol_type != NULL) {
    set_has_protocol_type();
  } else {
    clear_has_protocol_type();
  }
  protocol_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol_type);
  // @@protoc_insertion_point(field_set_allocated:proto_msg.Twist.protocol_type)
}

// required double x = 2;
inline bool Twist::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Twist::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Twist::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Twist::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double Twist::x() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.x)
  return x_;
}
inline void Twist::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.x)
}

// required double y = 3;
inline bool Twist::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Twist::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Twist::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Twist::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double Twist::y() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.y)
  return y_;
}
inline void Twist::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.y)
}

// required double z = 4;
inline bool Twist::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Twist::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Twist::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Twist::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double Twist::z() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.z)
  return z_;
}
inline void Twist::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.z)
}

// required double roll = 5;
inline bool Twist::has_roll() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Twist::set_has_roll() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Twist::clear_has_roll() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Twist::clear_roll() {
  roll_ = 0;
  clear_has_roll();
}
inline double Twist::roll() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.roll)
  return roll_;
}
inline void Twist::set_roll(double value) {
  set_has_roll();
  roll_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.roll)
}

// required double pitch = 6;
inline bool Twist::has_pitch() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Twist::set_has_pitch() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Twist::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Twist::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
inline double Twist::pitch() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.pitch)
  return pitch_;
}
inline void Twist::set_pitch(double value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.pitch)
}

// required double yaw = 7;
inline bool Twist::has_yaw() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Twist::set_has_yaw() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Twist::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Twist::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
inline double Twist::yaw() const {
  // @@protoc_insertion_point(field_get:proto_msg.Twist.yaw)
  return yaw_;
}
inline void Twist::set_yaw(double value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.Twist.yaw)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace proto_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fmsgs_2eTwist_2eproto__INCLUDED
