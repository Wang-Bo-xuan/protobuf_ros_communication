// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_msgs.TFMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto_msgs.TFMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_msg {
class TFDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TF>
     _instance;
} _TF_default_instance_;
class TFMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TFMessage>
     _instance;
} _TFMessage_default_instance_;
class TFStaticMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TFStaticMessage>
     _instance;
} _TFStaticMessage_default_instance_;

namespace protobuf_proto_5fmsgs_2eTFMessage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, publish_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, child_frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TF, yaw_),
  2,
  0,
  1,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFMessage, protocol_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFMessage, tfs_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFStaticMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFStaticMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFStaticMessage, protocol_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFStaticMessage, tfs_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(TF)},
  { 23, 30, sizeof(TFMessage)},
  { 32, 39, sizeof(TFStaticMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TF_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFStaticMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "proto_msgs.TFMessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TF_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TF_default_instance_);_TFMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TFMessage_default_instance_);_TFStaticMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TFStaticMessage_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032proto_msgs.TFMessage.proto\022\tproto_msg\""
      "\220\001\n\002TF\022\025\n\rpublish_stamp\030\002 \002(\001\022\020\n\010frame_i"
      "d\030\003 \002(\t\022\026\n\016child_frame_id\030\004 \002(\t\022\t\n\001x\030\005 \002"
      "(\001\022\t\n\001y\030\006 \002(\001\022\t\n\001z\030\007 \002(\001\022\014\n\004roll\030\010 \002(\001\022\r"
      "\n\005pitch\030\t \002(\001\022\013\n\003yaw\030\n \002(\001\">\n\tTFMessage\022"
      "\025\n\rprotocol_type\030\001 \002(\t\022\032\n\003tfs\030\002 \003(\0132\r.pr"
      "oto_msg.TF\"D\n\017TFStaticMessage\022\025\n\rprotoco"
      "l_type\030\001 \002(\t\022\032\n\003tfs\030\002 \003(\0132\r.proto_msg.TF"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 320);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto_msgs.TFMessage.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_proto_5fmsgs_2eTFMessage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TF::kPublishStampFieldNumber;
const int TF::kFrameIdFieldNumber;
const int TF::kChildFrameIdFieldNumber;
const int TF::kXFieldNumber;
const int TF::kYFieldNumber;
const int TF::kZFieldNumber;
const int TF::kRollFieldNumber;
const int TF::kPitchFieldNumber;
const int TF::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TF::TF()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_5fmsgs_2eTFMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_msg.TF)
}
TF::TF(const TF& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_frame_id()) {
    frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
  }
  child_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_child_frame_id()) {
    child_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.child_frame_id_);
  }
  ::memcpy(&publish_stamp_, &from.publish_stamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&publish_stamp_)) + sizeof(yaw_));
  // @@protoc_insertion_point(copy_constructor:proto_msg.TF)
}

void TF::SharedCtor() {
  _cached_size_ = 0;
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&publish_stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&publish_stamp_)) + sizeof(yaw_));
}

TF::~TF() {
  // @@protoc_insertion_point(destructor:proto_msg.TF)
  SharedDtor();
}

void TF::SharedDtor() {
  frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TF::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TF::descriptor() {
  protobuf_proto_5fmsgs_2eTFMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_5fmsgs_2eTFMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TF& TF::default_instance() {
  protobuf_proto_5fmsgs_2eTFMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

TF* TF::New(::google::protobuf::Arena* arena) const {
  TF* n = new TF;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TF::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_msg.TF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!frame_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*frame_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!child_frame_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*child_frame_id_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&publish_stamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pitch_) -
        reinterpret_cast<char*>(&publish_stamp_)) + sizeof(pitch_));
  }
  yaw_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TF::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_msg.TF)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double publish_stamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_publish_stamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &publish_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string frame_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_frame_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->frame_id().data(), static_cast<int>(this->frame_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto_msg.TF.frame_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string child_frame_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_child_frame_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->child_frame_id().data(), static_cast<int>(this->child_frame_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto_msg.TF.child_frame_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double z = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double roll = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_roll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double pitch = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double yaw = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_yaw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_msg.TF)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_msg.TF)
  return false;
#undef DO_
}

void TF::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_msg.TF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double publish_stamp = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->publish_stamp(), output);
  }

  // required string frame_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->frame_id().data(), static_cast<int>(this->frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto_msg.TF.frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->frame_id(), output);
  }

  // required string child_frame_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->child_frame_id().data(), static_cast<int>(this->child_frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto_msg.TF.child_frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->child_frame_id(), output);
  }

  // required double x = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->x(), output);
  }

  // required double y = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->y(), output);
  }

  // required double z = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->z(), output);
  }

  // required double roll = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->roll(), output);
  }

  // required double pitch = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->pitch(), output);
  }

  // required double yaw = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->yaw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_msg.TF)
}

::google::protobuf::uint8* TF::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_msg.TF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double publish_stamp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->publish_stamp(), target);
  }

  // required string frame_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->frame_id().data(), static_cast<int>(this->frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto_msg.TF.frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->frame_id(), target);
  }

  // required string child_frame_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->child_frame_id().data(), static_cast<int>(this->child_frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto_msg.TF.child_frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->child_frame_id(), target);
  }

  // required double x = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->x(), target);
  }

  // required double y = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->y(), target);
  }

  // required double z = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->z(), target);
  }

  // required double roll = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->roll(), target);
  }

  // required double pitch = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->pitch(), target);
  }

  // required double yaw = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->yaw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_msg.TF)
  return target;
}

size_t TF::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto_msg.TF)
  size_t total_size = 0;

  if (has_frame_id()) {
    // required string frame_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->frame_id());
  }

  if (has_child_frame_id()) {
    // required string child_frame_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->child_frame_id());
  }

  if (has_publish_stamp()) {
    // required double publish_stamp = 2;
    total_size += 1 + 8;
  }

  if (has_x()) {
    // required double x = 5;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 6;
    total_size += 1 + 8;
  }

  if (has_z()) {
    // required double z = 7;
    total_size += 1 + 8;
  }

  if (has_roll()) {
    // required double roll = 8;
    total_size += 1 + 8;
  }

  if (has_pitch()) {
    // required double pitch = 9;
    total_size += 1 + 8;
  }

  if (has_yaw()) {
    // required double yaw = 10;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t TF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_msg.TF)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required string frame_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->frame_id());

    // required string child_frame_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->child_frame_id());

    // required double publish_stamp = 2;
    total_size += 1 + 8;

    // required double x = 5;
    total_size += 1 + 8;

    // required double y = 6;
    total_size += 1 + 8;

    // required double z = 7;
    total_size += 1 + 8;

    // required double roll = 8;
    total_size += 1 + 8;

    // required double pitch = 9;
    total_size += 1 + 8;

    // required double yaw = 10;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TF::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_msg.TF)
  GOOGLE_DCHECK_NE(&from, this);
  const TF* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TF>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_msg.TF)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_msg.TF)
    MergeFrom(*source);
  }
}

void TF::MergeFrom(const TF& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_msg.TF)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_frame_id();
      frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_child_frame_id();
      child_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.child_frame_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      publish_stamp_ = from.publish_stamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000010u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000020u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000040u) {
      roll_ = from.roll_;
    }
    if (cached_has_bits & 0x00000080u) {
      pitch_ = from.pitch_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_yaw(from.yaw());
  }
}

void TF::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_msg.TF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TF::CopyFrom(const TF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_msg.TF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TF::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  return true;
}

void TF::Swap(TF* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TF::InternalSwap(TF* other) {
  using std::swap;
  frame_id_.Swap(&other->frame_id_);
  child_frame_id_.Swap(&other->child_frame_id_);
  swap(publish_stamp_, other->publish_stamp_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TF::GetMetadata() const {
  protobuf_proto_5fmsgs_2eTFMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_5fmsgs_2eTFMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TF

// required double publish_stamp = 2;
bool TF::has_publish_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TF::set_has_publish_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
void TF::clear_has_publish_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
void TF::clear_publish_stamp() {
  publish_stamp_ = 0;
  clear_has_publish_stamp();
}
double TF::publish_stamp() const {
  // @@protoc_insertion_point(field_get:proto_msg.TF.publish_stamp)
  return publish_stamp_;
}
void TF::set_publish_stamp(double value) {
  set_has_publish_stamp();
  publish_stamp_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.TF.publish_stamp)
}

// required string frame_id = 3;
bool TF::has_frame_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TF::set_has_frame_id() {
  _has_bits_[0] |= 0x00000001u;
}
void TF::clear_has_frame_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void TF::clear_frame_id() {
  frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_frame_id();
}
const ::std::string& TF::frame_id() const {
  // @@protoc_insertion_point(field_get:proto_msg.TF.frame_id)
  return frame_id_.GetNoArena();
}
void TF::set_frame_id(const ::std::string& value) {
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_msg.TF.frame_id)
}
#if LANG_CXX11
void TF::set_frame_id(::std::string&& value) {
  set_has_frame_id();
  frame_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_msg.TF.frame_id)
}
#endif
void TF::set_frame_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_msg.TF.frame_id)
}
void TF::set_frame_id(const char* value, size_t size) {
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_msg.TF.frame_id)
}
::std::string* TF::mutable_frame_id() {
  set_has_frame_id();
  // @@protoc_insertion_point(field_mutable:proto_msg.TF.frame_id)
  return frame_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TF::release_frame_id() {
  // @@protoc_insertion_point(field_release:proto_msg.TF.frame_id)
  clear_has_frame_id();
  return frame_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TF::set_allocated_frame_id(::std::string* frame_id) {
  if (frame_id != NULL) {
    set_has_frame_id();
  } else {
    clear_has_frame_id();
  }
  frame_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame_id);
  // @@protoc_insertion_point(field_set_allocated:proto_msg.TF.frame_id)
}

// required string child_frame_id = 4;
bool TF::has_child_frame_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TF::set_has_child_frame_id() {
  _has_bits_[0] |= 0x00000002u;
}
void TF::clear_has_child_frame_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void TF::clear_child_frame_id() {
  child_frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_child_frame_id();
}
const ::std::string& TF::child_frame_id() const {
  // @@protoc_insertion_point(field_get:proto_msg.TF.child_frame_id)
  return child_frame_id_.GetNoArena();
}
void TF::set_child_frame_id(const ::std::string& value) {
  set_has_child_frame_id();
  child_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_msg.TF.child_frame_id)
}
#if LANG_CXX11
void TF::set_child_frame_id(::std::string&& value) {
  set_has_child_frame_id();
  child_frame_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_msg.TF.child_frame_id)
}
#endif
void TF::set_child_frame_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_child_frame_id();
  child_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_msg.TF.child_frame_id)
}
void TF::set_child_frame_id(const char* value, size_t size) {
  set_has_child_frame_id();
  child_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_msg.TF.child_frame_id)
}
::std::string* TF::mutable_child_frame_id() {
  set_has_child_frame_id();
  // @@protoc_insertion_point(field_mutable:proto_msg.TF.child_frame_id)
  return child_frame_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TF::release_child_frame_id() {
  // @@protoc_insertion_point(field_release:proto_msg.TF.child_frame_id)
  clear_has_child_frame_id();
  return child_frame_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TF::set_allocated_child_frame_id(::std::string* child_frame_id) {
  if (child_frame_id != NULL) {
    set_has_child_frame_id();
  } else {
    clear_has_child_frame_id();
  }
  child_frame_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), child_frame_id);
  // @@protoc_insertion_point(field_set_allocated:proto_msg.TF.child_frame_id)
}

// required double x = 5;
bool TF::has_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TF::set_has_x() {
  _has_bits_[0] |= 0x00000008u;
}
void TF::clear_has_x() {
  _has_bits_[0] &= ~0x00000008u;
}
void TF::clear_x() {
  x_ = 0;
  clear_has_x();
}
double TF::x() const {
  // @@protoc_insertion_point(field_get:proto_msg.TF.x)
  return x_;
}
void TF::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.TF.x)
}

// required double y = 6;
bool TF::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TF::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
void TF::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
void TF::clear_y() {
  y_ = 0;
  clear_has_y();
}
double TF::y() const {
  // @@protoc_insertion_point(field_get:proto_msg.TF.y)
  return y_;
}
void TF::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.TF.y)
}

// required double z = 7;
bool TF::has_z() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TF::set_has_z() {
  _has_bits_[0] |= 0x00000020u;
}
void TF::clear_has_z() {
  _has_bits_[0] &= ~0x00000020u;
}
void TF::clear_z() {
  z_ = 0;
  clear_has_z();
}
double TF::z() const {
  // @@protoc_insertion_point(field_get:proto_msg.TF.z)
  return z_;
}
void TF::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.TF.z)
}

// required double roll = 8;
bool TF::has_roll() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TF::set_has_roll() {
  _has_bits_[0] |= 0x00000040u;
}
void TF::clear_has_roll() {
  _has_bits_[0] &= ~0x00000040u;
}
void TF::clear_roll() {
  roll_ = 0;
  clear_has_roll();
}
double TF::roll() const {
  // @@protoc_insertion_point(field_get:proto_msg.TF.roll)
  return roll_;
}
void TF::set_roll(double value) {
  set_has_roll();
  roll_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.TF.roll)
}

// required double pitch = 9;
bool TF::has_pitch() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TF::set_has_pitch() {
  _has_bits_[0] |= 0x00000080u;
}
void TF::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000080u;
}
void TF::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
double TF::pitch() const {
  // @@protoc_insertion_point(field_get:proto_msg.TF.pitch)
  return pitch_;
}
void TF::set_pitch(double value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.TF.pitch)
}

// required double yaw = 10;
bool TF::has_yaw() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TF::set_has_yaw() {
  _has_bits_[0] |= 0x00000100u;
}
void TF::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000100u;
}
void TF::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
double TF::yaw() const {
  // @@protoc_insertion_point(field_get:proto_msg.TF.yaw)
  return yaw_;
}
void TF::set_yaw(double value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.TF.yaw)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFMessage::kProtocolTypeFieldNumber;
const int TFMessage::kTfsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFMessage::TFMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_5fmsgs_2eTFMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_msg.TFMessage)
}
TFMessage::TFMessage(const TFMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tfs_(from.tfs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protocol_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_protocol_type()) {
    protocol_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_type_);
  }
  // @@protoc_insertion_point(copy_constructor:proto_msg.TFMessage)
}

void TFMessage::SharedCtor() {
  _cached_size_ = 0;
  protocol_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TFMessage::~TFMessage() {
  // @@protoc_insertion_point(destructor:proto_msg.TFMessage)
  SharedDtor();
}

void TFMessage::SharedDtor() {
  protocol_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TFMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFMessage::descriptor() {
  protobuf_proto_5fmsgs_2eTFMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_5fmsgs_2eTFMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TFMessage& TFMessage::default_instance() {
  protobuf_proto_5fmsgs_2eTFMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFMessage* TFMessage::New(::google::protobuf::Arena* arena) const {
  TFMessage* n = new TFMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_msg.TFMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tfs_.Clear();
  if (has_protocol_type()) {
    GOOGLE_DCHECK(!protocol_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*protocol_type_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TFMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_msg.TFMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string protocol_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->protocol_type().data(), static_cast<int>(this->protocol_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto_msg.TFMessage.protocol_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto_msg.TF tfs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tfs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_msg.TFMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_msg.TFMessage)
  return false;
#undef DO_
}

void TFMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_msg.TFMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string protocol_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->protocol_type().data(), static_cast<int>(this->protocol_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto_msg.TFMessage.protocol_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->protocol_type(), output);
  }

  // repeated .proto_msg.TF tfs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tfs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tfs(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_msg.TFMessage)
}

::google::protobuf::uint8* TFMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_msg.TFMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string protocol_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->protocol_type().data(), static_cast<int>(this->protocol_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto_msg.TFMessage.protocol_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->protocol_type(), target);
  }

  // repeated .proto_msg.TF tfs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tfs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->tfs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_msg.TFMessage)
  return target;
}

size_t TFMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_msg.TFMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string protocol_type = 1;
  if (has_protocol_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol_type());
  }
  // repeated .proto_msg.TF tfs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->tfs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tfs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_msg.TFMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TFMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_msg.TFMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_msg.TFMessage)
    MergeFrom(*source);
  }
}

void TFMessage::MergeFrom(const TFMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_msg.TFMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tfs_.MergeFrom(from.tfs_);
  if (from.has_protocol_type()) {
    set_has_protocol_type();
    protocol_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_type_);
  }
}

void TFMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_msg.TFMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFMessage::CopyFrom(const TFMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_msg.TFMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tfs())) return false;
  return true;
}

void TFMessage::Swap(TFMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFMessage::InternalSwap(TFMessage* other) {
  using std::swap;
  tfs_.InternalSwap(&other->tfs_);
  protocol_type_.Swap(&other->protocol_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFMessage::GetMetadata() const {
  protobuf_proto_5fmsgs_2eTFMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_5fmsgs_2eTFMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFMessage

// required string protocol_type = 1;
bool TFMessage::has_protocol_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TFMessage::set_has_protocol_type() {
  _has_bits_[0] |= 0x00000001u;
}
void TFMessage::clear_has_protocol_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void TFMessage::clear_protocol_type() {
  protocol_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_protocol_type();
}
const ::std::string& TFMessage::protocol_type() const {
  // @@protoc_insertion_point(field_get:proto_msg.TFMessage.protocol_type)
  return protocol_type_.GetNoArena();
}
void TFMessage::set_protocol_type(const ::std::string& value) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_msg.TFMessage.protocol_type)
}
#if LANG_CXX11
void TFMessage::set_protocol_type(::std::string&& value) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_msg.TFMessage.protocol_type)
}
#endif
void TFMessage::set_protocol_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_msg.TFMessage.protocol_type)
}
void TFMessage::set_protocol_type(const char* value, size_t size) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_msg.TFMessage.protocol_type)
}
::std::string* TFMessage::mutable_protocol_type() {
  set_has_protocol_type();
  // @@protoc_insertion_point(field_mutable:proto_msg.TFMessage.protocol_type)
  return protocol_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFMessage::release_protocol_type() {
  // @@protoc_insertion_point(field_release:proto_msg.TFMessage.protocol_type)
  clear_has_protocol_type();
  return protocol_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFMessage::set_allocated_protocol_type(::std::string* protocol_type) {
  if (protocol_type != NULL) {
    set_has_protocol_type();
  } else {
    clear_has_protocol_type();
  }
  protocol_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol_type);
  // @@protoc_insertion_point(field_set_allocated:proto_msg.TFMessage.protocol_type)
}

// repeated .proto_msg.TF tfs = 2;
int TFMessage::tfs_size() const {
  return tfs_.size();
}
void TFMessage::clear_tfs() {
  tfs_.Clear();
}
const ::proto_msg::TF& TFMessage::tfs(int index) const {
  // @@protoc_insertion_point(field_get:proto_msg.TFMessage.tfs)
  return tfs_.Get(index);
}
::proto_msg::TF* TFMessage::mutable_tfs(int index) {
  // @@protoc_insertion_point(field_mutable:proto_msg.TFMessage.tfs)
  return tfs_.Mutable(index);
}
::proto_msg::TF* TFMessage::add_tfs() {
  // @@protoc_insertion_point(field_add:proto_msg.TFMessage.tfs)
  return tfs_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto_msg::TF >*
TFMessage::mutable_tfs() {
  // @@protoc_insertion_point(field_mutable_list:proto_msg.TFMessage.tfs)
  return &tfs_;
}
const ::google::protobuf::RepeatedPtrField< ::proto_msg::TF >&
TFMessage::tfs() const {
  // @@protoc_insertion_point(field_list:proto_msg.TFMessage.tfs)
  return tfs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFStaticMessage::kProtocolTypeFieldNumber;
const int TFStaticMessage::kTfsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFStaticMessage::TFStaticMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_5fmsgs_2eTFMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_msg.TFStaticMessage)
}
TFStaticMessage::TFStaticMessage(const TFStaticMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tfs_(from.tfs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protocol_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_protocol_type()) {
    protocol_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_type_);
  }
  // @@protoc_insertion_point(copy_constructor:proto_msg.TFStaticMessage)
}

void TFStaticMessage::SharedCtor() {
  _cached_size_ = 0;
  protocol_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TFStaticMessage::~TFStaticMessage() {
  // @@protoc_insertion_point(destructor:proto_msg.TFStaticMessage)
  SharedDtor();
}

void TFStaticMessage::SharedDtor() {
  protocol_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TFStaticMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFStaticMessage::descriptor() {
  protobuf_proto_5fmsgs_2eTFMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_5fmsgs_2eTFMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TFStaticMessage& TFStaticMessage::default_instance() {
  protobuf_proto_5fmsgs_2eTFMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFStaticMessage* TFStaticMessage::New(::google::protobuf::Arena* arena) const {
  TFStaticMessage* n = new TFStaticMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFStaticMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_msg.TFStaticMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tfs_.Clear();
  if (has_protocol_type()) {
    GOOGLE_DCHECK(!protocol_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*protocol_type_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TFStaticMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_msg.TFStaticMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string protocol_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->protocol_type().data(), static_cast<int>(this->protocol_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto_msg.TFStaticMessage.protocol_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto_msg.TF tfs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tfs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_msg.TFStaticMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_msg.TFStaticMessage)
  return false;
#undef DO_
}

void TFStaticMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_msg.TFStaticMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string protocol_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->protocol_type().data(), static_cast<int>(this->protocol_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto_msg.TFStaticMessage.protocol_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->protocol_type(), output);
  }

  // repeated .proto_msg.TF tfs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tfs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tfs(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_msg.TFStaticMessage)
}

::google::protobuf::uint8* TFStaticMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_msg.TFStaticMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string protocol_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->protocol_type().data(), static_cast<int>(this->protocol_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto_msg.TFStaticMessage.protocol_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->protocol_type(), target);
  }

  // repeated .proto_msg.TF tfs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tfs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->tfs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_msg.TFStaticMessage)
  return target;
}

size_t TFStaticMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_msg.TFStaticMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string protocol_type = 1;
  if (has_protocol_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol_type());
  }
  // repeated .proto_msg.TF tfs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->tfs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tfs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFStaticMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_msg.TFStaticMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TFStaticMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFStaticMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_msg.TFStaticMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_msg.TFStaticMessage)
    MergeFrom(*source);
  }
}

void TFStaticMessage::MergeFrom(const TFStaticMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_msg.TFStaticMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tfs_.MergeFrom(from.tfs_);
  if (from.has_protocol_type()) {
    set_has_protocol_type();
    protocol_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_type_);
  }
}

void TFStaticMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_msg.TFStaticMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFStaticMessage::CopyFrom(const TFStaticMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_msg.TFStaticMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFStaticMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tfs())) return false;
  return true;
}

void TFStaticMessage::Swap(TFStaticMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFStaticMessage::InternalSwap(TFStaticMessage* other) {
  using std::swap;
  tfs_.InternalSwap(&other->tfs_);
  protocol_type_.Swap(&other->protocol_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFStaticMessage::GetMetadata() const {
  protobuf_proto_5fmsgs_2eTFMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_5fmsgs_2eTFMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFStaticMessage

// required string protocol_type = 1;
bool TFStaticMessage::has_protocol_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TFStaticMessage::set_has_protocol_type() {
  _has_bits_[0] |= 0x00000001u;
}
void TFStaticMessage::clear_has_protocol_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void TFStaticMessage::clear_protocol_type() {
  protocol_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_protocol_type();
}
const ::std::string& TFStaticMessage::protocol_type() const {
  // @@protoc_insertion_point(field_get:proto_msg.TFStaticMessage.protocol_type)
  return protocol_type_.GetNoArena();
}
void TFStaticMessage::set_protocol_type(const ::std::string& value) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_msg.TFStaticMessage.protocol_type)
}
#if LANG_CXX11
void TFStaticMessage::set_protocol_type(::std::string&& value) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_msg.TFStaticMessage.protocol_type)
}
#endif
void TFStaticMessage::set_protocol_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_msg.TFStaticMessage.protocol_type)
}
void TFStaticMessage::set_protocol_type(const char* value, size_t size) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_msg.TFStaticMessage.protocol_type)
}
::std::string* TFStaticMessage::mutable_protocol_type() {
  set_has_protocol_type();
  // @@protoc_insertion_point(field_mutable:proto_msg.TFStaticMessage.protocol_type)
  return protocol_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFStaticMessage::release_protocol_type() {
  // @@protoc_insertion_point(field_release:proto_msg.TFStaticMessage.protocol_type)
  clear_has_protocol_type();
  return protocol_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFStaticMessage::set_allocated_protocol_type(::std::string* protocol_type) {
  if (protocol_type != NULL) {
    set_has_protocol_type();
  } else {
    clear_has_protocol_type();
  }
  protocol_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol_type);
  // @@protoc_insertion_point(field_set_allocated:proto_msg.TFStaticMessage.protocol_type)
}

// repeated .proto_msg.TF tfs = 2;
int TFStaticMessage::tfs_size() const {
  return tfs_.size();
}
void TFStaticMessage::clear_tfs() {
  tfs_.Clear();
}
const ::proto_msg::TF& TFStaticMessage::tfs(int index) const {
  // @@protoc_insertion_point(field_get:proto_msg.TFStaticMessage.tfs)
  return tfs_.Get(index);
}
::proto_msg::TF* TFStaticMessage::mutable_tfs(int index) {
  // @@protoc_insertion_point(field_mutable:proto_msg.TFStaticMessage.tfs)
  return tfs_.Mutable(index);
}
::proto_msg::TF* TFStaticMessage::add_tfs() {
  // @@protoc_insertion_point(field_add:proto_msg.TFStaticMessage.tfs)
  return tfs_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto_msg::TF >*
TFStaticMessage::mutable_tfs() {
  // @@protoc_insertion_point(field_mutable_list:proto_msg.TFStaticMessage.tfs)
  return &tfs_;
}
const ::google::protobuf::RepeatedPtrField< ::proto_msg::TF >&
TFStaticMessage::tfs() const {
  // @@protoc_insertion_point(field_list:proto_msg.TFStaticMessage.tfs)
  return tfs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_msg

// @@protoc_insertion_point(global_scope)
