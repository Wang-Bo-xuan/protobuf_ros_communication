// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_msgs.OccupancyGrid.proto

#ifndef PROTOBUF_proto_5fmsgs_2eOccupancyGrid_2eproto__INCLUDED
#define PROTOBUF_proto_5fmsgs_2eOccupancyGrid_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto_msg {
class OccupancyGrid;
class OccupancyGridDefaultTypeInternal;
extern OccupancyGridDefaultTypeInternal _OccupancyGrid_default_instance_;
}  // namespace proto_msg

namespace proto_msg {

namespace protobuf_proto_5fmsgs_2eOccupancyGrid_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_proto_5fmsgs_2eOccupancyGrid_2eproto

// ===================================================================

class OccupancyGrid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto_msg.OccupancyGrid) */ {
 public:
  OccupancyGrid();
  virtual ~OccupancyGrid();

  OccupancyGrid(const OccupancyGrid& from);

  inline OccupancyGrid& operator=(const OccupancyGrid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OccupancyGrid(OccupancyGrid&& from) noexcept
    : OccupancyGrid() {
    *this = ::std::move(from);
  }

  inline OccupancyGrid& operator=(OccupancyGrid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupancyGrid& default_instance();

  static inline const OccupancyGrid* internal_default_instance() {
    return reinterpret_cast<const OccupancyGrid*>(
               &_OccupancyGrid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(OccupancyGrid* other);
  friend void swap(OccupancyGrid& a, OccupancyGrid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OccupancyGrid* New() const PROTOBUF_FINAL { return New(NULL); }

  OccupancyGrid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OccupancyGrid& from);
  void MergeFrom(const OccupancyGrid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OccupancyGrid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string protocol_type = 1;
  bool has_protocol_type() const;
  void clear_protocol_type();
  static const int kProtocolTypeFieldNumber = 1;
  const ::std::string& protocol_type() const;
  void set_protocol_type(const ::std::string& value);
  #if LANG_CXX11
  void set_protocol_type(::std::string&& value);
  #endif
  void set_protocol_type(const char* value);
  void set_protocol_type(const char* value, size_t size);
  ::std::string* mutable_protocol_type();
  ::std::string* release_protocol_type();
  void set_allocated_protocol_type(::std::string* protocol_type);

  // required string frame_id = 4;
  bool has_frame_id() const;
  void clear_frame_id();
  static const int kFrameIdFieldNumber = 4;
  const ::std::string& frame_id() const;
  void set_frame_id(const ::std::string& value);
  #if LANG_CXX11
  void set_frame_id(::std::string&& value);
  #endif
  void set_frame_id(const char* value);
  void set_frame_id(const char* value, size_t size);
  ::std::string* mutable_frame_id();
  ::std::string* release_frame_id();
  void set_allocated_frame_id(::std::string* frame_id);

  // required bytes map_data = 15;
  bool has_map_data() const;
  void clear_map_data();
  static const int kMapDataFieldNumber = 15;
  const ::std::string& map_data() const;
  void set_map_data(const ::std::string& value);
  #if LANG_CXX11
  void set_map_data(::std::string&& value);
  #endif
  void set_map_data(const char* value);
  void set_map_data(const void* value, size_t size);
  ::std::string* mutable_map_data();
  ::std::string* release_map_data();
  void set_allocated_map_data(::std::string* map_data);

  // required double publish_stamp = 2;
  bool has_publish_stamp() const;
  void clear_publish_stamp();
  static const int kPublishStampFieldNumber = 2;
  double publish_stamp() const;
  void set_publish_stamp(double value);

  // required double load_time = 3;
  bool has_load_time() const;
  void clear_load_time();
  static const int kLoadTimeFieldNumber = 3;
  double load_time() const;
  void set_load_time(double value);

  // required float resolution = 5;
  bool has_resolution() const;
  void clear_resolution();
  static const int kResolutionFieldNumber = 5;
  float resolution() const;
  void set_resolution(float value);

  // required float width = 6;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 6;
  float width() const;
  void set_width(float value);

  // required double x = 8;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 8;
  double x() const;
  void set_x(double value);

  // required double y = 9;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 9;
  double y() const;
  void set_y(double value);

  // required double z = 10;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 10;
  double z() const;
  void set_z(double value);

  // required double q_x = 11;
  bool has_q_x() const;
  void clear_q_x();
  static const int kQXFieldNumber = 11;
  double q_x() const;
  void set_q_x(double value);

  // required double q_y = 12;
  bool has_q_y() const;
  void clear_q_y();
  static const int kQYFieldNumber = 12;
  double q_y() const;
  void set_q_y(double value);

  // required double q_z = 13;
  bool has_q_z() const;
  void clear_q_z();
  static const int kQZFieldNumber = 13;
  double q_z() const;
  void set_q_z(double value);

  // required double q_w = 14;
  bool has_q_w() const;
  void clear_q_w();
  static const int kQWFieldNumber = 14;
  double q_w() const;
  void set_q_w(double value);

  // required float height = 7;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 7;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:proto_msg.OccupancyGrid)
 private:
  void set_has_protocol_type();
  void clear_has_protocol_type();
  void set_has_publish_stamp();
  void clear_has_publish_stamp();
  void set_has_load_time();
  void clear_has_load_time();
  void set_has_frame_id();
  void clear_has_frame_id();
  void set_has_resolution();
  void clear_has_resolution();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();
  void set_has_q_x();
  void clear_has_q_x();
  void set_has_q_y();
  void clear_has_q_y();
  void set_has_q_z();
  void clear_has_q_z();
  void set_has_q_w();
  void clear_has_q_w();
  void set_has_map_data();
  void clear_has_map_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr protocol_type_;
  ::google::protobuf::internal::ArenaStringPtr frame_id_;
  ::google::protobuf::internal::ArenaStringPtr map_data_;
  double publish_stamp_;
  double load_time_;
  float resolution_;
  float width_;
  double x_;
  double y_;
  double z_;
  double q_x_;
  double q_y_;
  double q_z_;
  double q_w_;
  float height_;
  friend struct protobuf_proto_5fmsgs_2eOccupancyGrid_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OccupancyGrid

// required string protocol_type = 1;
inline bool OccupancyGrid::has_protocol_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupancyGrid::set_has_protocol_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OccupancyGrid::clear_has_protocol_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OccupancyGrid::clear_protocol_type() {
  protocol_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_protocol_type();
}
inline const ::std::string& OccupancyGrid::protocol_type() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.protocol_type)
  return protocol_type_.GetNoArena();
}
inline void OccupancyGrid::set_protocol_type(const ::std::string& value) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.protocol_type)
}
#if LANG_CXX11
inline void OccupancyGrid::set_protocol_type(::std::string&& value) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_msg.OccupancyGrid.protocol_type)
}
#endif
inline void OccupancyGrid::set_protocol_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_msg.OccupancyGrid.protocol_type)
}
inline void OccupancyGrid::set_protocol_type(const char* value, size_t size) {
  set_has_protocol_type();
  protocol_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_msg.OccupancyGrid.protocol_type)
}
inline ::std::string* OccupancyGrid::mutable_protocol_type() {
  set_has_protocol_type();
  // @@protoc_insertion_point(field_mutable:proto_msg.OccupancyGrid.protocol_type)
  return protocol_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OccupancyGrid::release_protocol_type() {
  // @@protoc_insertion_point(field_release:proto_msg.OccupancyGrid.protocol_type)
  clear_has_protocol_type();
  return protocol_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OccupancyGrid::set_allocated_protocol_type(::std::string* protocol_type) {
  if (protocol_type != NULL) {
    set_has_protocol_type();
  } else {
    clear_has_protocol_type();
  }
  protocol_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol_type);
  // @@protoc_insertion_point(field_set_allocated:proto_msg.OccupancyGrid.protocol_type)
}

// required double publish_stamp = 2;
inline bool OccupancyGrid::has_publish_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OccupancyGrid::set_has_publish_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OccupancyGrid::clear_has_publish_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OccupancyGrid::clear_publish_stamp() {
  publish_stamp_ = 0;
  clear_has_publish_stamp();
}
inline double OccupancyGrid::publish_stamp() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.publish_stamp)
  return publish_stamp_;
}
inline void OccupancyGrid::set_publish_stamp(double value) {
  set_has_publish_stamp();
  publish_stamp_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.publish_stamp)
}

// required double load_time = 3;
inline bool OccupancyGrid::has_load_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OccupancyGrid::set_has_load_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OccupancyGrid::clear_has_load_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OccupancyGrid::clear_load_time() {
  load_time_ = 0;
  clear_has_load_time();
}
inline double OccupancyGrid::load_time() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.load_time)
  return load_time_;
}
inline void OccupancyGrid::set_load_time(double value) {
  set_has_load_time();
  load_time_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.load_time)
}

// required string frame_id = 4;
inline bool OccupancyGrid::has_frame_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupancyGrid::set_has_frame_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OccupancyGrid::clear_has_frame_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OccupancyGrid::clear_frame_id() {
  frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_frame_id();
}
inline const ::std::string& OccupancyGrid::frame_id() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.frame_id)
  return frame_id_.GetNoArena();
}
inline void OccupancyGrid::set_frame_id(const ::std::string& value) {
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.frame_id)
}
#if LANG_CXX11
inline void OccupancyGrid::set_frame_id(::std::string&& value) {
  set_has_frame_id();
  frame_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_msg.OccupancyGrid.frame_id)
}
#endif
inline void OccupancyGrid::set_frame_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_msg.OccupancyGrid.frame_id)
}
inline void OccupancyGrid::set_frame_id(const char* value, size_t size) {
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_msg.OccupancyGrid.frame_id)
}
inline ::std::string* OccupancyGrid::mutable_frame_id() {
  set_has_frame_id();
  // @@protoc_insertion_point(field_mutable:proto_msg.OccupancyGrid.frame_id)
  return frame_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OccupancyGrid::release_frame_id() {
  // @@protoc_insertion_point(field_release:proto_msg.OccupancyGrid.frame_id)
  clear_has_frame_id();
  return frame_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OccupancyGrid::set_allocated_frame_id(::std::string* frame_id) {
  if (frame_id != NULL) {
    set_has_frame_id();
  } else {
    clear_has_frame_id();
  }
  frame_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame_id);
  // @@protoc_insertion_point(field_set_allocated:proto_msg.OccupancyGrid.frame_id)
}

// required float resolution = 5;
inline bool OccupancyGrid::has_resolution() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OccupancyGrid::set_has_resolution() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OccupancyGrid::clear_has_resolution() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OccupancyGrid::clear_resolution() {
  resolution_ = 0;
  clear_has_resolution();
}
inline float OccupancyGrid::resolution() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.resolution)
  return resolution_;
}
inline void OccupancyGrid::set_resolution(float value) {
  set_has_resolution();
  resolution_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.resolution)
}

// required float width = 6;
inline bool OccupancyGrid::has_width() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OccupancyGrid::set_has_width() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OccupancyGrid::clear_has_width() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OccupancyGrid::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline float OccupancyGrid::width() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.width)
  return width_;
}
inline void OccupancyGrid::set_width(float value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.width)
}

// required float height = 7;
inline bool OccupancyGrid::has_height() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void OccupancyGrid::set_has_height() {
  _has_bits_[0] |= 0x00004000u;
}
inline void OccupancyGrid::clear_has_height() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void OccupancyGrid::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline float OccupancyGrid::height() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.height)
  return height_;
}
inline void OccupancyGrid::set_height(float value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.height)
}

// required double x = 8;
inline bool OccupancyGrid::has_x() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OccupancyGrid::set_has_x() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OccupancyGrid::clear_has_x() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OccupancyGrid::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double OccupancyGrid::x() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.x)
  return x_;
}
inline void OccupancyGrid::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.x)
}

// required double y = 9;
inline bool OccupancyGrid::has_y() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OccupancyGrid::set_has_y() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OccupancyGrid::clear_has_y() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OccupancyGrid::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double OccupancyGrid::y() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.y)
  return y_;
}
inline void OccupancyGrid::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.y)
}

// required double z = 10;
inline bool OccupancyGrid::has_z() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OccupancyGrid::set_has_z() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OccupancyGrid::clear_has_z() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OccupancyGrid::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double OccupancyGrid::z() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.z)
  return z_;
}
inline void OccupancyGrid::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.z)
}

// required double q_x = 11;
inline bool OccupancyGrid::has_q_x() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OccupancyGrid::set_has_q_x() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OccupancyGrid::clear_has_q_x() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OccupancyGrid::clear_q_x() {
  q_x_ = 0;
  clear_has_q_x();
}
inline double OccupancyGrid::q_x() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.q_x)
  return q_x_;
}
inline void OccupancyGrid::set_q_x(double value) {
  set_has_q_x();
  q_x_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.q_x)
}

// required double q_y = 12;
inline bool OccupancyGrid::has_q_y() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OccupancyGrid::set_has_q_y() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OccupancyGrid::clear_has_q_y() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OccupancyGrid::clear_q_y() {
  q_y_ = 0;
  clear_has_q_y();
}
inline double OccupancyGrid::q_y() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.q_y)
  return q_y_;
}
inline void OccupancyGrid::set_q_y(double value) {
  set_has_q_y();
  q_y_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.q_y)
}

// required double q_z = 13;
inline bool OccupancyGrid::has_q_z() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OccupancyGrid::set_has_q_z() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OccupancyGrid::clear_has_q_z() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OccupancyGrid::clear_q_z() {
  q_z_ = 0;
  clear_has_q_z();
}
inline double OccupancyGrid::q_z() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.q_z)
  return q_z_;
}
inline void OccupancyGrid::set_q_z(double value) {
  set_has_q_z();
  q_z_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.q_z)
}

// required double q_w = 14;
inline bool OccupancyGrid::has_q_w() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OccupancyGrid::set_has_q_w() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OccupancyGrid::clear_has_q_w() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OccupancyGrid::clear_q_w() {
  q_w_ = 0;
  clear_has_q_w();
}
inline double OccupancyGrid::q_w() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.q_w)
  return q_w_;
}
inline void OccupancyGrid::set_q_w(double value) {
  set_has_q_w();
  q_w_ = value;
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.q_w)
}

// required bytes map_data = 15;
inline bool OccupancyGrid::has_map_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OccupancyGrid::set_has_map_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OccupancyGrid::clear_has_map_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OccupancyGrid::clear_map_data() {
  map_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map_data();
}
inline const ::std::string& OccupancyGrid::map_data() const {
  // @@protoc_insertion_point(field_get:proto_msg.OccupancyGrid.map_data)
  return map_data_.GetNoArena();
}
inline void OccupancyGrid::set_map_data(const ::std::string& value) {
  set_has_map_data();
  map_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_msg.OccupancyGrid.map_data)
}
#if LANG_CXX11
inline void OccupancyGrid::set_map_data(::std::string&& value) {
  set_has_map_data();
  map_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_msg.OccupancyGrid.map_data)
}
#endif
inline void OccupancyGrid::set_map_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_map_data();
  map_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_msg.OccupancyGrid.map_data)
}
inline void OccupancyGrid::set_map_data(const void* value, size_t size) {
  set_has_map_data();
  map_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_msg.OccupancyGrid.map_data)
}
inline ::std::string* OccupancyGrid::mutable_map_data() {
  set_has_map_data();
  // @@protoc_insertion_point(field_mutable:proto_msg.OccupancyGrid.map_data)
  return map_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OccupancyGrid::release_map_data() {
  // @@protoc_insertion_point(field_release:proto_msg.OccupancyGrid.map_data)
  clear_has_map_data();
  return map_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OccupancyGrid::set_allocated_map_data(::std::string* map_data) {
  if (map_data != NULL) {
    set_has_map_data();
  } else {
    clear_has_map_data();
  }
  map_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_data);
  // @@protoc_insertion_point(field_set_allocated:proto_msg.OccupancyGrid.map_data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace proto_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fmsgs_2eOccupancyGrid_2eproto__INCLUDED
